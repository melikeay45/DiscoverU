@page "/"
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@using DiscoverU.Application.Dtos.SurveyDto
@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop


<style>

    .hover-zoom:hover {
        transform: scale(1.05);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
    }

    .iframe-container {
        position: relative;
        width: 100%;
        height: 100vh; /* Tam ekran yapmak için height: 100vh kullanıyoruz */
    }

    .full-screen-iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: none;
       
    }

    .overlay-text {
        position: absolute;
        top: 70px; /* Üstten boşluk bırakma */
        left: 50%;
        transform: translateX(-50%);
        color: white; /* Yazı rengini ayarlayabilirsiniz */
/*         background-color: rgba(0, 0, 0, 0.5); /* Arka plan rengini ve opaklığını ayarlayabilirsiniz */
 */        padding: 20px; /* Boşluk ekleyebilirsiniz */
        border-radius: 10px; /* Köşeleri yuvarlatabilirsiniz */
        z-index: 1; /* Üstte olmasını sağlamak için z-index kullanıyoruz */
        font-size: 100px; /* Yazı boyutunu ayarlayabilirsiniz */
        font-family: 'Arial', sans-serif; /* Yazı tipini ayarlayabilirsiniz, daha havalı bir yazı tipi kullanabilirsiniz */
        text-align: center; /* Yazıyı ortalamak için */
</style>

<div class="iframe-container">
    <iframe src="https://app.spline.design/file/8ec5df83-4cb7-47a7-9fec-681f6c84b3b4" class="full-screen-iframe"></iframe>
    <div class="overlay-text">DiscoverU</div>
</div>

<div class="container mx-auto p-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
    @if (Cards is null)
    {
        <div>lOADİNG</div>
    }
    else if (!Cards.Any())
    {
        <div role="alert" class="alert alert-warning">
            <svg xmlns="http://www.w3.org/2000/svg" class="shrink-0 h-6 w-6 stroke-current" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" /></svg>
            <span>There aren't any products to be shown.</span>
        </div>
    }
    else
    {

        @foreach (var card in Cards)
        {
            <div class="max-w-sm mx-auto bg-white shadow-lg rounded-lg overflow-hidden transform transition duration-500 hover-zoom">
                <img class="w-full h-64 object-cover" src="@card.ImageUrl" width="250" alt="Shoes">
                <div class="p-6 text-center">
                    <h2 class="text-2xl font-bold text-gray-900">@card.Title</h2>
                    <p class="mt-2 text-gray-600">@card.Description</p>
                    <div class="mt-4">
                        <button @onclick="() => NavigateToWeatherPage(card.Id)" class="btn btn-primary bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-lg shadow-lg transition duration-300">Başla</button>
                    </div>
                </div>
            </div>
        }


    }


</div>


@code {

    private List<GetSurveyDto> Cards = null;

    protected override async Task OnInitializedAsync()
    {
        Cards = await HttpClient.GetFromJsonAsync<List<GetSurveyDto>>("Surveys/GetAll");

        await base.OnInitializedAsync();
        Console.WriteLine(Cards.Count());
    }

    private void NavigateToWeatherPage(Guid id)
    {
        Navigation.NavigateTo($"/QuizPage/{id}");
    }

}
