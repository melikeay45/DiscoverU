@page "/QuizPage/{id:guid}"
@using DiscoverU.Application.Dtos.QuestionDto
@using DiscoverU.Application.Dtos.ResponseDto
@inject HttpClient HttpClient
@inject NavigationManager Navigation

@if (questions != null)
{
    @foreach (var question in questions)
    {

        <QuestionComponent2 question="question" SelectedOptionEventCallBack="SelectedOption" />
    }
}
else
{
    <p>Loading...</p>
}


@code {
    [Parameter] public Guid id { get; set; }
    private List<GetQuestionDto> questions;
    private List<UserReponseDto> UserResponseDtos = new List<UserReponseDto>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (id == Guid.Empty)
            {
                Console.WriteLine("Survey Id is null");
                return;
            }

            questions = await HttpClient.GetFromJsonAsync<List<GetQuestionDto>>($"Questions/GetAllBySurveyId/{id}");
            if (questions == null || !questions.Any())
            {
                Console.WriteLine("No questions returned from the API.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"API request failed: {ex.Message}");
        }
    }

    private void SelectedOption(UserReponseDto responseDto)
    {
        UserResponseDtos.Add(responseDto);
        Console.WriteLine(responseDto.OptionText);
    }
}
