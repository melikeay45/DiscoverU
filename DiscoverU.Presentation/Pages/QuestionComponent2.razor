@using DiscoverU.Application.Dtos.QuestionDto
@using DiscoverU.Application.Dtos.ResponseDto
@inject NavigationManager Navigation

<div class="container-flex">
    <!-- Card 1 -->
    <div class="w-3/5 bg-white shadow-lg rounded-lg overflow-hidden transform transition duration-500 hover:rotate-3 relative hover-grow">
        <div class="bg-neutral text-neutral-content">
            <div class="p-6 text-center">
                @if (question != null)
                {
                    <p class="w-full bg-gray-500 text-gray-100 p-4 rounded"><strong>@question.Text</strong></p>
                    <hr class="my-4" />
                    <div class="mt-4 space-y-2">
                        @if (question.Options != null)
                        {
                            @foreach (var option in question.Options)
                            {
                                <button class="btn btn-block" @onclick="@(() => HandleButtonClick(option.Id))">@(option.Text)</button>
                            }
                        }
                    </div>
                }
                else
                {
                    <p>Loading...</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public GetQuestionDto question { get; set; }
    [Parameter] public EventCallback<UserReponseDto> SelectedOptionEventCallBack { get; set; }


    private async Task HandleButtonClick(Guid _optionId)
    {
        if (question != null && question.Options != null)
        {
            var selectedOption = question.Options.FirstOrDefault(x => x.Id == _optionId);
            if (selectedOption != null)
            {
                var responseDto = new UserReponseDto
                    {
                        QuestionText = question.Text,
                        OptionText = selectedOption.Text
                    };

                await SelectedOptionEventCallBack.InvokeAsync(responseDto);
            }
        }
    }
}
